1. Create the following tables for an Employee and department and insert the values accordingly.
** Use MySQL/PostgreSql.

CREATE TABLE DEPARTMENT
(
   DEPTCODE   
   DeptName   
   LOCATION   
);

CREATE TABLE EMPLOYEE
(
   EmpCode    
   EmpFName      // First name
   EmpLName      // Last name
   Job         
   Manager     
   HireDate    
   Salary       
   Commission   
   DEPTCODE     
);


Database creation and Opertion

1.1. Write a statement to create the following tables with the appropriate data types and insert 20 records for the same.
1.2. Create a query that displays the first name, last name, department code, department name, location from the employee and department tables. Make sure the results are in ascending order based on the first name and location of the department.
1.3. Display employee's first name and total salary for each employee. (Hint : Total Salary = Salary+Commission)
1.4. Display Maximum and 2nd Maximum salary from the Employee table.
1.5. Compute average, minimum and maximum salaries of the group employees having a particular job (eg: Developer) 

JDBC 
1.6. Write a program to fetch all records from the Employee and Department table.
1.7. Write a program to fetch the details of the employees along with Department Code and Department name
1.8. Write a program to insert a new department record and also create a new Employee record. Relate the newly created employee with the newly created department.
1.9. Write a program to modify/update an existing Employee record. (Any Employee)
1.10. Write a program to delete an Employee record.


API 1: https://jsonplaceholder.typicode.com/posts          - GET Request
API 2: https://jsonplaceholder.typicode.com/comments       - GET Request
API 3: https://jsonplaceholder.typicode.com/albums         - GET Request 
API 4: https://jsonplaceholder.typicode.com/todos          - GET Request
API 5: https://jsonplaceholder.typicode.com/users          - GET Request

2. REST API, Database and Multithreading
2.1. Write a program to fetch data from the server by consuming the APIs given below. Make sure the tasks should execute concurrently. (Multithreading).



